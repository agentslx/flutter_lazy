import 'package:equatable/equatable.dart';
import 'package:json_annotation/json_annotation.dart';

part '{{ FEATURE_NAME_SNAKE }}_model.g.dart';

@JsonSerializable(fieldRename: FieldRename.snake)
class {{ FEATURE_NAME_PASCAL }}Model extends Equatable {
  const {{ FEATURE_NAME_PASCAL }}Model({
    required this.id,
    required this.title,
    required this.description,
    required this.createdAt,
    this.updatedAt,
  });
  
  factory {{ FEATURE_NAME_PASCAL }}Model.fromJson(Map<String, dynamic> json) => 
      _${{ FEATURE_NAME_PASCAL }}ModelFromJson(json);
  
  final String id;
  final String title;
  final String description;
  final DateTime createdAt;
  final DateTime? updatedAt;
      
  Map<String, dynamic> toJson() => _${{ FEATURE_NAME_PASCAL }}ModelToJson(this);
  
  {{ FEATURE_NAME_PASCAL }}Model copyWith({
    String? id,
    String? title,
    String? description,
    DateTime? createdAt,
    DateTime? updatedAt,
  }) {
    return {{ FEATURE_NAME_PASCAL }}Model(
      id: id ?? this.id,
      title: title ?? this.title,
      description: description ?? this.description,
      createdAt: createdAt ?? this.createdAt,
      updatedAt: updatedAt ?? this.updatedAt,
    );
  }
  
  @override
  List<Object?> get props => [id, title, description, createdAt, updatedAt];
}
