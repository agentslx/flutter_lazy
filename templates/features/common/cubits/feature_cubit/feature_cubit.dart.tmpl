// filepath: /Users/hainv8196/Dropbox/Ohio/pixelfield/flutter_project/flutter_lazy/templates/features/common/cubits/feature_cubit/feature_cubit.dart.tmpl
import 'package:equatable/equatable.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:formz/formz.dart';

import '../../../../di.dart';
import '../../data/repository/{{ FEATURE_NAME_SNAKE }}_repository.dart';

part '{{ FEATURE_NAME_SNAKE }}_state.dart';

class {{ FEATURE_NAME_PASCAL }}Cubit extends Cubit<{{ FEATURE_NAME_PASCAL }}State> {
  {{ FEATURE_NAME_PASCAL }}Cubit() : super(const {{ FEATURE_NAME_PASCAL }}State());

  final {{ FEATURE_NAME_PASCAL }}Repository _repository = getIt<{{ FEATURE_NAME_PASCAL }}Repository>();

  /// Initialize the cubit and load data
  Future<void> initialize() async {
    if (state.isLoading) return;
    emit(state.copyWith(status: FormzSubmissionStatus.inProgress));

    try {
      final result = await _repository.getData();
      result.fold(
        (failure) => emit(state.copyWith(
          status: FormzSubmissionStatus.failure,
          errorMessage: failure.message,
        )),
        (_) => emit(state.copyWith(
          status: FormzSubmissionStatus.success,
        )),
      );
    } catch (e) {
      emit(state.copyWith(
        status: FormzSubmissionStatus.failure,
        errorMessage: e.toString(),
      ));
    }
  }
}
